#!/bin/sh

if [ -n "$DEBUG" ]; then 
    echo "debugging on $DEBUG"
    alias debug_message="echo"
else
    #echo "debugging off $DEBUG"
    alias debug_message="true "
fi

# If not running interactively, don't do anything
case $- in
    *i*)   debug_message "This shell is interactive";;
    *)  debug_message "This shell is not interactive" ;;
esac

platform='unknown'
unamestr=`uname`
debug_message $unamestr
if [ "$unamestr" == 'Linux' ]; then
   platform='linux'
elif [ "$unamestr" == 'Darwin' ]; then
      platform='Darwin'
fi

filename="$HOME/.bash_profile"

if [ ! -e $filename ];then
    echo "No configuration was found, installing myself on $filename"
    echo "$0 -> $filename"
    mydir=`pwd`/$0
    ln -s $mydir $filename
else
    # if it is a syslink to bashrc does nothing
    if [ -L $filename ];then
        debug_message "Already is a syslink, so we skip the copy step"
    else
        date=`date +%s`
        destiny="$filename.$date"
        mv $filename $destiny
        debug_message "Configuration file already exists "
        debug_message "moved old to $destiny and installed a new"
    fi
fi

if [ -z "${GITHUBDIR}" ];then
    GITHUBDIR=~/github
fi

for configuration in $GITHUBDIR/configs/bashrc/*_*;
do 
    if [ -f $configuration ];then
        debug_message "Processing $configuration"
        . $configuration
    fi
done

# Copy my versions of .vimrc over

pushd . &>/dev/null
cd  
for vim in $GITHUBDIR/configs/vim/.v*;
do 
    file=`basename $vim`
    if ! [[ -L $file ]]; then
        if [ -e $file ]; then
            rm $file
            ln -s $vim .
        else 
            ln -s $vim .
        fi
    fi
done
popd  &>/dev/null

# Global .gitignore

cp $GITHUBDIR/configs/git/.global_gitignore ~/.gitignore
git config --global core.excludesfile ~/.gitignore

